From 0e0545732125630de859e4c140a24e0075ca9d3b Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Fri, 13 Dec 2013 11:58:58 +1100
Subject: [PATCH] Configurable Amount of Netty Threads

This brings back the option that the Spigot version of netty saw. By default Netty will try and use cores*2 threads, however if running multiple servers on the same machine, this can be too many threads. Additionally some people have 16 core servers. If 32 Netty threads are allowed in this setup, then the lock contention, and thus blocking between threads becomes much greater, leading to decreased performance.

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index c4431ce5..84553989 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -60,7 +60,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
     private final List<ITickable> o = Lists.newArrayList();
     public final ICommandHandler b;
     public final MethodProfiler methodProfiler = new MethodProfiler();
-    private final ServerConnection p;
+    private ServerConnection p; // Spigot
     private final ServerPing q = new ServerPing();
     private final Random r = new Random();
     public final DataConverterManager dataConverterManager;
@@ -126,7 +126,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
         this.X = gameprofilerepository;
         this.Y = usercache;
         // this.universe = file; // CraftBukkit
-        this.p = new ServerConnection(this);
+        // this.p = new ServerConnection(this); // Spigot
         this.b = this.i();
         // this.convertable = new WorldLoaderServer(file); // CraftBukkit - moved to DedicatedServer.init
         this.dataConverterManager = dataconvertermanager;
@@ -1335,7 +1335,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
     }
     // Spigot End
     public ServerConnection an() {
-        return this.p;
+        return this.p == null ? this.p = new ServerConnection(this) : this.p; // Spigot
     }
 
     public boolean ap() {
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 145b33a9..63156fd8 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -222,4 +222,11 @@ public class SpigotConfig
         }
         bungee = getBoolean( "settings.bungeecord", false );
     }
+
+    private static void nettyThreads()
+    {
+        int count = getInt( "settings.netty-threads", 4 );
+        System.setProperty( "io.netty.eventLoopThreads", Integer.toString( count ) );
+        Bukkit.getLogger().log( Level.INFO, "Using {0} threads for Netty based IO", count );
+    }
 }
-- 
2.17.1

